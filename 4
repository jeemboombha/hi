<div class="details-panel" *ngIf="selectedGroup">
  <h3>{{ selectedGroup.name }} - Services</h3>

  <table mat-table [dataSource]="groupRows" multiTemplateDataRows class="mat-elevation-z2" style="width: 100%;">
    
    <!-- Group Row -->
    <ng-container matColumnDef="group">
      <th mat-header-cell *matHeaderCellDef>Group Name</th>
      <td mat-cell *matCellDef="let row" (click)="toggleRow(row)">
        <span style="cursor: pointer; font-weight: bold;">
          ▶ {{ row.name }}
        </span>
      </td>
    </ng-container>

    <!-- Expanded Detail Row -->
    <ng-container matColumnDef="expandedDetail">
      <td mat-cell *matCellDef="let row" [attr.colspan]="1">
        <div class="inner-table-wrapper" *ngIf="expandedRow === row">

          <table mat-table [dataSource]="row.services" class="inner-table" style="width: 100%; margin-top: 10px;">
            
            <ng-container matColumnDef="name">
              <th mat-header-cell *matHeaderCellDef>Service</th>
              <td mat-cell *matCellDef="let element">{{ element.name }}</td>
            </ng-container>

            <ng-container matColumnDef="status">
              <th mat-header-cell *matHeaderCellDef>Status</th>
              <td mat-cell *matCellDef="let element">
                <span [ngClass]="element.status === 'Up' ? 'status-up' : 'status-down'">
                  {{ element.status }}
                </span>
              </td>
            </ng-container>

            <ng-container matColumnDef="id">
              <th mat-header-cell *matHeaderCellDef>ID</th>
              <td mat-cell *matCellDef="let element">{{ element.id }}</td>
            </ng-container>

            <tr mat-header-row *matHeaderRowDef="['name', 'status', 'id']"></tr>
            <tr mat-row *matRowDef="let row; columns: ['name', 'status', 'id'];"></tr>
          </table>

        </div>
      </td>
    </ng-container>

    <!-- Row Definitions -->
    <tr mat-header-row *matHeaderRowDef="['group']"></tr>
    <tr mat-row *matRowDef="let row; columns: ['group'];" class="group-row"></tr>
    <tr mat-row *matRowDef="let row; columns: ['expandedDetail']" class="detail-row"></tr>
  </table>
</div>







groupRows = [
  {
    name: 'Team Alpha',
    services: [
      { id: 'S1', name: 'Service 1', status: 'Up' },
      { id: 'S2', name: 'Service 2', status: 'Down' }
    ]
  },
  {
    name: 'Team Beta',
    services: [
      { id: 'S3', name: 'Service 3', status: 'Up' },
      { id: 'S4', name: 'Service 4', status: 'Up' }
    ]
  }
];

expandedRow: any = null;

toggleRow(row: any) {
  this.expandedRow = this.expandedRow === row ? null : row;
}




.group-row {
  cursor: pointer;
}

.inner-table-wrapper {
  padding: 8px;
  background-color: #f9f9f9;
}

.status-up {
  color: green;
  font-weight: bold;
}

.status-down {
  color: red;
  font-weight: bold;
}

.graph-container {
  display: flex;
  height: 100vh;
  width: 100%;
  overflow: hidden;
}

/* ✅ Default full-width graph */
.graph-full {
  flex: 1;
}

/* ✅ When panel is visible, graph should be 2/3 */
.graph-two-thirds {
  flex: 2;
}

/* ✅ Panel takes 1/3 */
.details-panel {
  flex: 1;
  padding: 16px;
  border-left: 1px solid #ddd;
  background-color: #fff;
  overflow-y: auto;
}


<div class="graph-container">
  <ngx-graph
    [links]="links"
    [nodes]="nodes"
    [layout]="'dagre'"
    [panOnZoom]="true"
    [enableZoom]="true"
    [zoomSpeed]="0.1"
    [autoZoom]="true"
    [draggingEnabled]="false"
    (nodeSelected)="onNodeClick($event)"
    [ngClass]="selectedGroup ? 'graph-two-thirds' : 'graph-full'">

		<ng-template #defsTemplate>
    <svg:marker
      id="arrow"
      viewBox="0 -5 10 10"
      refX="15"
      refY="0"
      markerWidth="6"
      markerHeight="6"
      orient="auto">
      <svg:path d="M0,-5L10,0L0,5" fill="#555" />
    </svg:marker>
  </ng-template>

		<ng-template #linkTemplate let-link>
    <svg:g class="edge">
      <svg:path
        class="line"
        stroke="black"
        stroke-width="2"
        [attr.id]="link.id"
        marker-end="url(#arrow)">
      </svg:path>
      <svg:text class="edge-label" text-anchor="middle">
        <textPath
          [attr.href]="'#' + link.id"
          startOffset="50%">
          {{ link.label }}
        </textPath>
      </svg:text>
    </svg:g>
  </ng-template>

    <ng-template #nodeTemplate let-node>
      <svg:g [attr.transform]="'translate(' + node.position.x + ',' + node.position.y + ')'">
        <svg:rect
          width="140"
          height="60"
          rx="8" ry="8"
          stroke="black"
          [attr.fill]="node.data.status === 'Up' ? '#28a745' : '#dc3545'"></svg:rect>
        <foreignObject width="140" height="60" x="0" y="0">
          <div xmlns="http://www.w3.org/1999/xhtml"
               style="display: flex; align-items: center; justify-content: space-around; height:100%; font-weight: bold; color: white;">
            <input type="checkbox"
                   [checked]="selected[node.id]"
                   (change)="toggleSelect(node)" />
            {{ node.label }}
          </div>
        </foreignObject>
      </svg:g>
    </ng-template>
  </ngx-graph>

  <!-- ✅ Show only if selectedGroup is not null -->
  <div class="details-panel" *ngIf="selectedGroup">
    <h3>{{ selectedGroup.name }} - Services</h3>

    <!-- table here -->
    <!-- your existing material table code -->
  </div>
</div>